<testsuite failures="1" name="features/AssertionInKarate.feature" skipped="0" tests="4" time="0.043484">
  <testcase classname="features.AssertionInKarate" name="some matching example" time="0.005061">
    <failure message="AssertionInKarate.feature:6 - syntax error, expected '==' for match">* def name = 'Severus Snape' .............................................. passed
* match name = 'Severus Snape' ............................................ failed

Stack Trace:
com.intuit.karate.exception.KarateException: AssertionInKarate.feature:6 - syntax error, expected '==' for match&#13;
	at ✽.* match name = 'Severus Snape' (AssertionInKarate.feature:6)&#13;

* match name != 'Tom Riddle' .............................................. skipped</failure>
  </testcase>
  <testcase classname="features.AssertionInKarate" name="more matching example" time="0.021676">
    <system-out>* def name = 'Severus Snape' .............................................. passed
* match name = 'Severus Snape' ............................................ failed

Stack Trace:
com.intuit.karate.exception.KarateException: AssertionInKarate.feature:6 - syntax error, expected '==' for match&#13;
	at ✽.* match name = 'Severus Snape' (AssertionInKarate.feature:6)&#13;

* match name != 'Tom Riddle' .............................................. skipped
* def employee = .......................................................... passed
* def emp_name = employee.first_name ...................................... passed
* match emp_name == 'TJ' .................................................. passed
* match employee.salary == 24001 .......................................... passed</system-out>
  </testcase>
  <testcase classname="features.AssertionInKarate" name="fuzzy matching" time="0.00893">
    <system-out>* def name = 'Severus Snape' .............................................. passed
* match name = 'Severus Snape' ............................................ failed

Stack Trace:
com.intuit.karate.exception.KarateException: AssertionInKarate.feature:6 - syntax error, expected '==' for match&#13;
	at ✽.* match name = 'Severus Snape' (AssertionInKarate.feature:6)&#13;

* match name != 'Tom Riddle' .............................................. skipped
* def employee = .......................................................... passed
* def emp_name = employee.first_name ...................................... passed
* match emp_name == 'TJ' .................................................. passed
* match employee.salary == 24001 .......................................... passed
* def employee = .......................................................... passed
* match employee.first_name == '#string' .................................. passed
* match employee.salary == '#number' ...................................... passed
* match employee.active == '#boolean' ..................................... passed
* match employee.lastname == '#notpresent' ................................ passed</system-out>
  </testcase>
  <testcase classname="features.AssertionInKarate" name="contains matching" time="0.007816">
    <system-out>* def name = 'Severus Snape' .............................................. passed
* match name = 'Severus Snape' ............................................ failed

Stack Trace:
com.intuit.karate.exception.KarateException: AssertionInKarate.feature:6 - syntax error, expected '==' for match&#13;
	at ✽.* match name = 'Severus Snape' (AssertionInKarate.feature:6)&#13;

* match name != 'Tom Riddle' .............................................. skipped
* def employee = .......................................................... passed
* def emp_name = employee.first_name ...................................... passed
* match emp_name == 'TJ' .................................................. passed
* match employee.salary == 24001 .......................................... passed
* def employee = .......................................................... passed
* match employee.first_name == '#string' .................................. passed
* match employee.salary == '#number' ...................................... passed
* match employee.active == '#boolean' ..................................... passed
* match employee.lastname == '#notpresent' ................................ passed
* def employees = ......................................................... passed
* def length = employees.length ........................................... passed
* print length ............................................................ passed
* match length == 2 ....................................................... passed
* match employees contains {"first_name":"TJ","salary":24001,"active":true} . passed</system-out>
  </testcase>
</testsuite>
